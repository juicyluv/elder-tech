openapi: '3.0.0'
info:
  version: "1.0.0"
  title: "ElderTech"
  license:
    name: "MIT"
servers:
  - url: /api/v1
security:
  - bearerAuth: [ ]
paths:
  /courses/{id}:
    parameters:
      - name: id
        in: path
        description: ID курса
        required: true
        schema:
          type: integer
          format: int32
    get:
      operationId: GetCourse
      description: Получить курс
      tags:
        - Courses
      responses:
        200:
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateCourse
      description: Обновить курс
      tags:
        - Courses
      responses:
        200:
          description: OK
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: DeleteCourse
      description: Удалить курс
      tags:
        - Courses
      responses:
        200:
          description: OK
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /courses:
    post:
      operationId: CreateCourse
      description: Создать курс
      tags:
        - Courses
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - description
              properties:
                title:
                  type: string
                description:
                  type: string
                cover:
                  type: string
                  format: binary
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32

  /courses/user/{id}:
    parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
          format: int64
    get:
      operationId: GetUserCourses
      description: Get user courses
      tags:
        - Courses
      responses:
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  courses:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'

  /courses/author/{id}:
    parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
          format: int64
    get:
      operationId: GetAuthorCourses
      description: Get author courses
      tags:
        - Courses
      responses:
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  courses:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'
  /courses/{id}/members:
    parameters:
      - name: id
        in: path
        description: ID курса
        required: true
        schema:
          type: integer
          format: int64
    get:
      operationId: GetCourseMembers
      description: Получить пользователей курса
      tags:
        - Courses
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      operationId: AddCourseMembers
      description: Добавить курс пользователю
      tags:
        - Courses
      responses:
        200:
          description: OK
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/sign-in:
    post:
      operationId: SignIn
      description: Sign in
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
                - password
              properties:
                phone:
                  type: string
                password:
                  type: string
      responses:
        400:
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        200:
          description: Sign in response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'
  /auth/sign-up:
    post:
      description: Sign up
      operationId: SignUp
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - phone
                - password
              properties:
                name:
                  type: string
                surname:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        200:
          description: Sign up response

  /users/{id}:
    parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
          format: int64
    patch:
      tags:
        - Users
      operationId: UpdateUser
      description: Update user
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - phone
              properties:
                name:
                  type: string
                surname:
                  type: string
                patronymic:
                  type: string
                age:
                  type: integer
                  format: int16
                gender:
                  type: integer
                  format: int16
                phone:
                  type: string
                email:
                  type: string
        required: true
      responses:
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        200:
          description: OK
    get:
      tags:
        - Users
      operationId: GetUser
      description: Get user by ID.
      responses:
        200:
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: "Error response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Course:
      description: Course
      type: object
      required:
        - id
        - title
        - description
        - rating
        - author_id
        - time_to_complete_hours
        - difficulty
        - about
        - for_who
        - requirements
        - created_at
      properties:
        id:
          type: integer
          format: int32
        author_id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        difficulty:
          type: integer
          format: int16
        time_to_complete_hours:
          type: integer
          format: int16
        about:
          type: string
        for_who:
          type: string
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/Timestamp'
        requirements:
          type: string
        rating:
          type: number
          format: float
        progress:
          type: number
          format: float
        cover_image:
          type: string

    Error:
      description: Error
      type: object
      required:
        - message
        - slug
      properties:
        message:
          type: string
        slug:
          type: string

    User:
      type: object
      required:
        - id
        - name
        - phone
        - created_at
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        patronymic:
          type: string
        age:
          type: integer
          format: int16
        gender:
          type: integer
          format: int16
        phone:
          type: string
        email:
          type: string
        image_id:
          type: integer
          format: int64
        created_at:
          $ref: "#/components/schemas/Timestamp"
        lastOnline:
          $ref: "#/components/schemas/Timestamp"

    Timestamp:
      type: string
      format: date-time
      description: A timestamp representing a date and time in RFC3339 format

    SignInResponse:
      type: object
      required:
        - token
        - name
        - type
        - id
      properties:
        token:
          type: string
          format: jwt
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        patronymic:
          type: string
